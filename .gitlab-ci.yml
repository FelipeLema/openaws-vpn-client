# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Gradle.gitlab-ci.yml

# This is the Gradle build system for JVM applications
# https://gradle.org/
# https://github.com/gradle/gradle

image: rust:1.57.0

stages:
  - build
  - deploy
  - upload

# Disable the Gradle daemon for Continuous Integration servers as correctness
# is usually a priority over speed in CI environments. Using a fresh
# runtime for each build is more reliable since the runtime is completely
# isolated from any previous builds.
variables:
  CACHE_FALLBACK_KEY: "master"

build:
  stage: build
  script:
    - "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain nightly"
    - "cargo +nightly build --release"
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull-push
    paths:
      - target

build-openvpn:
  stage: build
  script:
    - "cd scripts"
    - "bash patch-openvpn.sh"
    - "cd .."
    - "tar -czvf share.tar.gz share"
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull-push
    paths:
      - share.tar.gz

deploy:
  stage: deploy
  image: rust:1.57.0
  before_script:
    - 'curl -fsSL https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 --output jq-linux64'
    - 'chmod +x ./jq-linux64'
  script:
    - >
      if [[ ! $(curl -s https://crates.io/api/v1/crates/openaws-vpn-client/versions | ./jq-linux64 -r ".versions[] | select(.num == \"${CI_COMMIT_TAG}\")") ]]; then
        rm -rf ./jq-linux64
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain nightly
        mkdir -p ~/.cargo
        cargo +nightly publish --token $(echo $CRATES_TOKEN | base64 -d -w 0)
      else
        true
      fi
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - target
  only:
    - tags

upload:
  stage: upload
  script:
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file target/release/openaws-vpn-client "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/openaws-vpn-client/${CI_COMMIT_TAG}/openaws-vpn-client"'
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file share.tar.gz "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/openaws-vpn-client/${CI_COMMIT_TAG}/share.tar.gz"'
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - target
  only:
    - tags